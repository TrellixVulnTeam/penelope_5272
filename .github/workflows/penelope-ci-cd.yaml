name: ci

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - master
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
# on:
#   create:
#     tags:
#     - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the code
        uses: actions/checkout@v2

      # Install and setup Python and Poetry
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Setup Poetry Caching
        uses: actions/cache@v1
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v1

      # Run install
      - name: Install penelope
        run: poetry install
      - run: poetry check
      - run: poetry debug

      # Format.
      # - name: Check Format
      #   run: poetry run make black isort

      # Lint.
      - run: poetry run make lint
      - run: poetry run black --quiet --check ./penelope
      - run: poetry run flake8 ./penelope
      # - run: safety check --bare --file ./requirements.txt

      # Check.
      # - name: Run static analysers
      #   run: poetry run mypy

      # Docs.
      # - name: Build the documentation
      #   run: poetry run invoke docs
      # - name: Upload documentation for release
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: docs
      #     path: docs/build/html/

      # Test.
      - name: Run the unit tests
        run: poetry run invoke test

      # Dist.
      - name: Build packages
        run: poetry build
      - name: Upload artifacts for release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v1
        with:
          name: wheel
          path: dist/

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - ci
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Checkout the code
        uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: Gr1N/setup-poetry@v4
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - run: poetry --version
      - uses: actions/download-artifact@v1
        with:
          name: wheel
          path: dist/
      # - uses: actions/download-artifact@v1
      #   with:
      #     name: docs
      #     path: docs/build/html
      # - name: Get Changelog Entry
      #   id: changelog_reader
      #   uses: mindsers/changelog-reader-action@v1.1.0
      # - name: Publish the release
      #   uses: softprops/action-gh-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     body: ${{ steps.changelog_reader.outputs.log_entry }}
      #     files: |
      #       dist/*
      # - name: Publish the documentation
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
      - name: publish the packages
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
